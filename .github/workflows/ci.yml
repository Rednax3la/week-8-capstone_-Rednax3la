name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
    
    - name: Run backend tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/taskflow_test
        JWT_SECRET: test_jwt_secret
        JWT_EXPIRE: 30d

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd client
        npm ci
    
    - name: Run frontend tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      run: |
        cd client
        npm run build

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd client
        npm ci
    
    - name: Run ESLint
      run: |
        cd client
        npm run lint
    
    - name: Check Prettier formatting
      run: |
        cd client
        npm run format -- --check

  deploy-staging:
    needs: [test-backend, test-frontend, lint-and-format]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Staging
      run: echo "Deploy to staging environment"
      # Add your staging deployment commands here

  deploy-production:
    needs: [test-backend, test-frontend, lint-and-format]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: echo "Deploy to production environment"
      # Add your production deployment commands here
